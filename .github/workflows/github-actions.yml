name: "Check flow"

on:
  # pull_request:
  #   types: [closed]
  #   branches: [dev, qa, uat, main]

  pull_request_review:
    types: [submitted]
    branches: [dev, qa, uat, main]

  # push:
  #   branches: [dev, qa, uat, main]

  workflow_dispatch:
    inputs:
      environment:
        description: "Please choose the environment to deploy"
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - qa
          - uat
          - prod

      lambda_function:
        description: "Please give a targeted lambda function"
        required: true
        default: 'samplefunction'
        type: string

      all_lambdas:
        description: "Choose all lambda function codes"
        required: true
        default: 'false'
        type: boolean

# ALLOWED_USERS: "[\"Shwetha118\", \"aindurthi\"]"

env:
  ENVIRONMENT: ${{ github.event.inputs.environment}}
  LAMBDA_FUNCTION: ${{ inputs.lambda_function }}
  ALLOWED_USERS: "[\"Shwetha118\", \"aindurthi\"]"

run-name: "Infra Deployment on ${{ github.event.inputs.environment }}"

jobs:
  pre-commits:
    name: "Check on the prerequisites"
    runs-on: ubuntu-latest
    if: >
      (
        (contains(fromJSON('["dev", "qa", "uat"]'), github.base_ref)) ||
        (contains(fromJSON('["refs/heads/dev", "refs/heads/qa", "refs/heads/uat"]'), github.ref))
      ) &&
      (
        contains(fromJSON('["Shwetha118", "aindurthi"]'), github.actor) ||
        contains(fromJSON('["Shwetha118", "aindurthi"]'), github.triggering_actor)
      )
    environment: ${{ github.event.inputs.environment  }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Show GitHub Context
        run: echo "${{ toJson(github) }}"

      - name: Echo Step
        run: echo "Conditions met. Running job! Environment ${{ github.event.inputs.environment || 'not provided' }}"

  pr-approved-and-merged:
    runs-on: ubuntu-latest
    if: >
      (
        contains(fromJSON('["refs/heads/dev", "refs/heads/qa", "refs/heads/uat"]'), github.ref) &&
        github.event.review.state == 'approved'
      ) &&
      (
        contains(fromJSON('["Shwetha118", "aindurthi"]'), github.actor) ||
        contains(fromJSON('["Shwetha118", "aindurthi"]'), github.triggering_actor)
      )
    steps:
      - name: Approved and Merged
        run: echo "âœ… Pull request approved and merged into environment ${{ github.event.inputs.environment }}"
